<filter-control>
    <form class="gallery-filter" onsubmit={ (e) => {e.preventDefault()} }>
        <input 
            type="text" 
            name="playername" 
            placeholder="Search for player..." 
            oninput={ onInputName }
            value={ state.nameBeingSearched }>
      

        <div>
            <sort-control
                on-change-sort={ props.onChangeSort }>
            </sort-control>
        </div>

        <div>
            <h2>Filter</h2>
            <h3>Show players who are</h3>

            <div class="filter-selector">   
                <div>
                    <input 
                        id="checkismemberof"
                        type="checkbox" 
                        onchange={ onChangeFilter }
                        value="ismemberof"
                        checked={ state.appliedFilters.includes('ismemberof') }>
                    <label
                        for="checkismemberof">
                        Currently a member of
                    </label>
                </div>

                <div>
                    <input 
                        id="checkwasmemberof"
                        type="checkbox" 
                        onchange={ onChangeFilter }
                        value="wasmemberof"
                        checked={ state.appliedFilters.includes('wasmemberof') }>
                    <label
                        for="checkwasmemberof">
                        Was a member of
                    </label>
                </div>
            </div>

             <select
                onchange={ onSelectTeam }
                disabled={ !state.appliedFilters.length }>
                <option value="" selected>Select a team</option>
                <optgroup 
                    each={ subleague in props.teams} 
                    label="{ subleague.name }">
                    
                    <option 
                        each={ team in subleague.teams }
                        selected={ team === state.teamFilter }>
                        { team }
                    </option>

                </optgroup>
            </select>
        </div>
    </form>

    <style>
    :host {
        display: block;
    }
    
    .gallery-filter {
        text-align: left;
    }

    .gallery-filter > div {
        margin: 1em 0;
    }

    input[type="text"] {
        border: none;
        background: var(--color-soft);
        color: var(--color-text);
        border-radius: .25rem;
        padding: .75rem 1rem;
    }

    .filter-selector {
    }

    .filter-selector > div {
        margin-top: 0.5em;
        cursor: pointer;

        display: flex;
    }

    .filter-selector label {
        display: block;
        flex: 10;
        padding-left: 0.5em;
    }

    .filter-selector input[type="checkbox"] {
        width: 1em;
    }

    .filter-selector input:checked + label {
    }

    select {
        margin-top: 0.5em;
    }

    </style>

    <script>
    import SortControl from './SortControl.riot'
    
    export default {

        components: { SortControl },

        onBeforeMount() {
            this.state = {
                appliedFilters: [],
                teamFilter: '',
                nameBeingSearched: ''
            }
        },

        onInputName(e) {
            // Reset all filters when name is inputted
            this.update({
                appliedFilters: [],
                teamFilter: '',
                nameBeingSearched: e.target.value
            })

            this.props.onFilterPlayerName(e.target.value)
        },

        onChangeFilter(e) {
            // Add value to filter list if box is checked
            const filter = e.target.value
            const currentFilters = this.state.appliedFilters
            let appliedFilters

            if (e.target.checked) {
                
                appliedFilters = currentFilters.concat([filter])
                
            }

            else {
                // Remove it if the box is unchecked                
                appliedFilters = currentFilters.filter(elem => elem != filter) 
                
            }

            let updatedStates = {
                appliedFilters,
                nameBeingSearched: '' // Reset searchbar
            }

            // Reset team if all filters are turned off
            if (!appliedFilters) {
                updatedStates['teamFilter'] = ''
            }

            
            this.update(updatedStates)

            this.props.onChangeFilter(this.state)
        },

        onSelectTeam(e) {

            // Reset searchbar
            this.update({
                teamFilter: e.target.value,
                nameBeingSearched: ''
            })

            this.props.onChangeFilter(this.state)
        }

    }
    </script>
</filter-control>