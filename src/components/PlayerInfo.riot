<player-info>
    <div class="player-info">
        <close-button 
            onclick={ props.onClose }
            class="close-button">    
        </close-button>

        <img class="sprite" src="images/{ state.viewedSprite }">

        <div if={ props.player.sprites.length > 1 }
            class="alt-images">
            <div 
                each={ sprite in props.player.sprites } 
                class="img-box">
                <img
                    onclick={ (e) => viewSprite(sprite) }
                    src="images/{ sprite }">
            </div>
        </div>

        <div class="info">
            <h2 class="name">
                { props.player["full-name"] }
            </h2>

            <h3 
                if={ !state.isRIV }
                class="team">
                <div if={ !state.isStars }
                    class="smol-desc">
                    Currently playing for the
                </div>
                { props.player["team"] }
            </h3>

            <h3
                if={ state.isRIV }
                class="team">
                Rest in Violence
            </h3>

            <p>{ state.formerTeamsText }</p> 
        </div>
    </div>

    <style>
    :host {
        --size-small: 200px;
        --size-large: 300px;
        --size-xlarge: 320px;
        --size-huge: 500px;
        --player-size: var(--size-small);

        --player-altscaling: scale(1,1);
    }

    .sprite {
        width: var(--player-size);
        max-width: 100%;
        height: var(--player-size);
        object-fit: none;
    }

    .player-info {
        width: 600px;
        max-width: 95%;
        box-sizing: border-box;
        margin: 10px auto;
        border: solid 3px #fff;
        padding: 2em;
        background-color: #494a46;
        color: #fff;
        text-align: center;

        position: relative;
    }

    .smol-desc {
        font-weight: 400;
    }

    .alt-images {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
    }
    .alt-images .img-box {
        width: 120px;
        overflow: hidden;
    }

    .alt-images img {
        width: 120px;
        transform: var(--player-altscaling);
    }

    .close-button {
        position: absolute;
        right: 10px;
        top: 10px;
        cursor: pointer;
    }

    .close-button:hover {
        border: solid 2px;
        border-radius: 1em;
    }

    .smol-desc {
        font-size: 0.7em;
    }
    </style>

    <script>
    import CloseButton from './CloseButton.riot'

    export default {
        components: { CloseButton },

        onBeforeMount(props, state) {
            this.state = {
                viewedSprite: props.player.sprites[0]
            }
        },

        onMounted() {
            console.log(this.props.player)

            // Set sizing
            const playerSize = this.props.player.size

            this.root.style.setProperty("--player-size", `var(--size-${playerSize}`)

            if (playerSize === "small") {
                this.root.style.setProperty("--player-altscaling", "scale(2, 2)")
            }

            if (playerSize === "large" || playerSize === "xlarge") {
                this.root.style.setProperty("--player-altscaling", "scale(1.5, 1.5)")
            }

            // Set description
            const formerTeams = this.props.player['former-teams']
            let formerTeamsText = ''

            if (formerTeams && formerTeams.length > 0) {
                let teamsText = ''

                if (formerTeams.length === 1) {
                    // Only in one team formerly? Just add it.
                    teamsText = "the " + formerTeams[0]
                }

                else {

                    for(let i = 0; i < formerTeams.length - 1; i++) {
                        teamsText += "the " + formerTeams[i] + ', '
                    }

                    teamsText = teamsText.slice(0, -2)
                    teamsText += " and the " + formerTeams[formerTeams.length - 1]
                }

                formerTeamsText = `Formerly of ${teamsText}.`
            }

            this.update({
                isRIV: this.props.player.team === "RIV" ? true : false,
                isStars: this.props.player.team === "Hall Stars" ? true : false,
                formerTeamsText
            }) 
        },

        viewSprite(sprite) {
            this.update({
                viewedSprite: sprite
            })
        },

    }
    </script>
</player-info>